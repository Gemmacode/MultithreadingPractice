@model Queue<TaskItem>

@{
    ViewData["Title"] = "Multithreading Demo";
}

<h2>@ViewData["Title"]</h2>

<form id="startTask1Form" asp-controller="Home" asp-action="StartTask1" method="post">
    <button type="button" onclick="startTask('startTask1Form', 'task1')">Start Task 1</button>
</form>

<form id="startTask2Form" asp-controller="Home" asp-action="StartTask2" method="post">
    <button type="button" onclick="startTask('startTask2Form', 'task2')">Start Task 2</button>
</form>

<div>
    <h3>Task Queue</h3>
    <ul>
        @foreach (var task in Model)
        {
            <li>
                @task.Name - @task.Status
            </li>
        }
    </ul>
</div>

@* JavaScript for dynamic updates *@
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    function startTask(formId, taskName) {
        var form = document.getElementById(formId);

        // Use Ajax to start the task
        $.ajax({
            type: "POST",
            url: form.action,
            success: function () {
                // Task started successfully
                console.log("Task started successfully");
                location.reload(); // Refresh the page to update the task queue
            },
            error: function () {
                // Handle error if needed
                console.log("Error starting task");
            }
        });
    }
</script>
